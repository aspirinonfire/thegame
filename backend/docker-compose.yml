version: '3.4'

services:
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    # must run as root to access volume mounts
    # see https://github.com/microsoft/mssql-docker/issues/13#issuecomment-641904197
    user: root
    ports:
      - "1433:1433"
    volumes:
      - ./mssql_volume/data:/var/opt/mssql/data
      - ./mssql_volume/log:/var/opt/mssql/log
      - ./mssql_volume/secrets:/var/opt/mssql/secrets
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${SQL_PASSWORD}
    healthcheck:
      # see https://docs.docker.com/reference/dockerfile/#healthcheck
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "${SQL_PASSWORD}", "-Q", "SELECT 1"]
      # expected container initialization time. once healthcheck succeeds, container is considered started
      start_period: 20s
      start_interval: 1s
      # once started, container will run healtchecks with the following configuration
      interval: 30s
      timeout: 5s
      retries: 3

  aspire.dashboard:
    image: mcr.microsoft.com/dotnet/aspire-dashboard:8.0.0
    ports:
      - "18888:18888" # UI
      #- "4317:18889"  # OTLP port (gRPC)
    environment:
      - Dashboard__Frontend__AuthMode=Unsecured # Dev only!
      - DASHBOARD__OTLP__AUTHMODE=ApiKey
      - DASHBOARD__OTLP__PRIMARYAPIKEY=${OTLP_API_KEY}

  gamedb.migrations:
    image: ${DOCKER_REGISTRY-}thegameapi
    command:
      - dotnet
      - TheGame.Api.dll
      - --migrate-db
    build:
      context: .
      dockerfile: TheGame.Api/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
    environment:
      - ConnectionStrings__GameDB=Server=mssql; Initial Catalog=${DB_NAME}; User Id=sa; Password=${SQL_PASSWORD}; Trust Server Certificate=True;
    depends_on:
      mssql:
        condition: service_healthy

  thegame.api:
    image: ${DOCKER_REGISTRY-}thegameapi
    build:
      context: .
      dockerfile: TheGame.Api/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
    environment:
      - ConnectionStrings__GameDB=Server=mssql; Initial Catalog=${DB_NAME}; User Id=sa; Password=${SQL_PASSWORD}; Trust Server Certificate=True;
      - Auth__Google__ClientId=${GOOGLE_CLIENT_ID}
      - Auth__Google__ClientSecret=${GOOGLE_CLIENT_SECRET}
      - Auth__Api__JwtSecret=${API_JWT_SECRET}
      - Auth__Api__JwtAudience=${API_JWT_AUDIENCE}
      - Auth__Api__JwtTokenExpirationMin=5
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - Logging__LogLevel__Default=Warning
      - Logging__LogLevel__Microsoft=Information
      - Otel__ExporterEndpoint=http://aspire.dashboard:18889
      - Otel__ExporterApiKey=${OTLP_API_KEY}
    depends_on:
      mssql:
        condition: service_healthy
      aspire.dashboard:
        condition: service_started
      gamedb.migrations:
        condition: service_completed_successfully
  
  nginx:
    image: nginx:1.25.3-alpine
    ports:
      - "8080:443"
    environment:
      - API_HOST=http://thegame.api:80
      - UI_HOST=http://host.docker.internal:3000
      - NGINX_PROXY_PORT=8080
    volumes:
      - ./nginx/www:/usr/share/nginx/html
      - ./nginx/config:/etc/nginx/templates
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      thegame.api:
        condition: service_started
  
