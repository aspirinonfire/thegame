// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheGame.Domain.DomainModels;

#nullable disable

namespace TheGame.Domain.DomainModels.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20250630234537_MoreRerooting")]
    partial class MoreRerooting
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameLicensePlates", b =>
                {
                    b.Property<long>("GameId")
                        .HasColumnType("bigint");

                    b.Property<long>("LicensePlateId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("SpottedByPlayerId")
                        .HasColumnType("bigint");

                    b.HasKey("GameId", "LicensePlateId");

                    b.HasIndex("LicensePlateId");

                    b.HasIndex("SpottedByPlayerId");

                    b.ToTable("GameLicensePlates");
                });

            modelBuilder.Entity("TheGame.Domain.DomainModels.Games.Game", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedByPlayerId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("EndedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("GameScore", "TheGame.Domain.DomainModels.Games.Game.GameScore#GameScore", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Achievements")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("TotalScore")
                                .HasColumnType("int");
                        });

                    b.HasKey("Id");

                    b.HasIndex("CreatedByPlayerId");

                    b.ToTable("Games", (string)null);
                });

            modelBuilder.Entity("TheGame.Domain.DomainModels.Games.GamePlayer", b =>
                {
                    b.Property<long>("GameId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("InvitationToken")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InviteStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("GamePlayer");
                });

            modelBuilder.Entity("TheGame.Domain.DomainModels.LicensePlates.LicensePlate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StateOrProvince")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Country", "StateOrProvince")
                        .IsUnique();

                    b.ToTable("LicensePlate");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Country = "US",
                            StateOrProvince = "AL"
                        },
                        new
                        {
                            Id = 2L,
                            Country = "US",
                            StateOrProvince = "AK"
                        },
                        new
                        {
                            Id = 3L,
                            Country = "US",
                            StateOrProvince = "AZ"
                        },
                        new
                        {
                            Id = 4L,
                            Country = "US",
                            StateOrProvince = "AR"
                        },
                        new
                        {
                            Id = 5L,
                            Country = "US",
                            StateOrProvince = "CA"
                        },
                        new
                        {
                            Id = 6L,
                            Country = "US",
                            StateOrProvince = "CO"
                        },
                        new
                        {
                            Id = 7L,
                            Country = "US",
                            StateOrProvince = "CT"
                        },
                        new
                        {
                            Id = 8L,
                            Country = "US",
                            StateOrProvince = "DE"
                        },
                        new
                        {
                            Id = 9L,
                            Country = "US",
                            StateOrProvince = "DC"
                        },
                        new
                        {
                            Id = 10L,
                            Country = "US",
                            StateOrProvince = "FL"
                        },
                        new
                        {
                            Id = 11L,
                            Country = "US",
                            StateOrProvince = "GA"
                        },
                        new
                        {
                            Id = 12L,
                            Country = "US",
                            StateOrProvince = "HI"
                        },
                        new
                        {
                            Id = 13L,
                            Country = "US",
                            StateOrProvince = "ID"
                        },
                        new
                        {
                            Id = 14L,
                            Country = "US",
                            StateOrProvince = "IL"
                        },
                        new
                        {
                            Id = 15L,
                            Country = "US",
                            StateOrProvince = "IN"
                        },
                        new
                        {
                            Id = 16L,
                            Country = "US",
                            StateOrProvince = "IA"
                        },
                        new
                        {
                            Id = 17L,
                            Country = "US",
                            StateOrProvince = "KS"
                        },
                        new
                        {
                            Id = 18L,
                            Country = "US",
                            StateOrProvince = "KY"
                        },
                        new
                        {
                            Id = 19L,
                            Country = "US",
                            StateOrProvince = "LA"
                        },
                        new
                        {
                            Id = 20L,
                            Country = "US",
                            StateOrProvince = "ME"
                        },
                        new
                        {
                            Id = 21L,
                            Country = "US",
                            StateOrProvince = "MD"
                        },
                        new
                        {
                            Id = 22L,
                            Country = "US",
                            StateOrProvince = "MA"
                        },
                        new
                        {
                            Id = 23L,
                            Country = "US",
                            StateOrProvince = "MI"
                        },
                        new
                        {
                            Id = 24L,
                            Country = "US",
                            StateOrProvince = "MN"
                        },
                        new
                        {
                            Id = 25L,
                            Country = "US",
                            StateOrProvince = "MS"
                        },
                        new
                        {
                            Id = 26L,
                            Country = "US",
                            StateOrProvince = "MO"
                        },
                        new
                        {
                            Id = 27L,
                            Country = "US",
                            StateOrProvince = "MT"
                        },
                        new
                        {
                            Id = 28L,
                            Country = "US",
                            StateOrProvince = "NE"
                        },
                        new
                        {
                            Id = 29L,
                            Country = "US",
                            StateOrProvince = "NV"
                        },
                        new
                        {
                            Id = 30L,
                            Country = "US",
                            StateOrProvince = "NH"
                        },
                        new
                        {
                            Id = 31L,
                            Country = "US",
                            StateOrProvince = "NJ"
                        },
                        new
                        {
                            Id = 32L,
                            Country = "US",
                            StateOrProvince = "NM"
                        },
                        new
                        {
                            Id = 33L,
                            Country = "US",
                            StateOrProvince = "NY"
                        },
                        new
                        {
                            Id = 34L,
                            Country = "US",
                            StateOrProvince = "NC"
                        },
                        new
                        {
                            Id = 35L,
                            Country = "US",
                            StateOrProvince = "ND"
                        },
                        new
                        {
                            Id = 36L,
                            Country = "US",
                            StateOrProvince = "OH"
                        },
                        new
                        {
                            Id = 37L,
                            Country = "US",
                            StateOrProvince = "OK"
                        },
                        new
                        {
                            Id = 38L,
                            Country = "US",
                            StateOrProvince = "OR"
                        },
                        new
                        {
                            Id = 39L,
                            Country = "US",
                            StateOrProvince = "PA"
                        },
                        new
                        {
                            Id = 40L,
                            Country = "US",
                            StateOrProvince = "RI"
                        },
                        new
                        {
                            Id = 41L,
                            Country = "US",
                            StateOrProvince = "SC"
                        },
                        new
                        {
                            Id = 42L,
                            Country = "US",
                            StateOrProvince = "SD"
                        },
                        new
                        {
                            Id = 43L,
                            Country = "US",
                            StateOrProvince = "TN"
                        },
                        new
                        {
                            Id = 44L,
                            Country = "US",
                            StateOrProvince = "TX"
                        },
                        new
                        {
                            Id = 45L,
                            Country = "US",
                            StateOrProvince = "UT"
                        },
                        new
                        {
                            Id = 46L,
                            Country = "US",
                            StateOrProvince = "VT"
                        },
                        new
                        {
                            Id = 47L,
                            Country = "US",
                            StateOrProvince = "VA"
                        },
                        new
                        {
                            Id = 48L,
                            Country = "US",
                            StateOrProvince = "WA"
                        },
                        new
                        {
                            Id = 49L,
                            Country = "US",
                            StateOrProvince = "WV"
                        },
                        new
                        {
                            Id = 50L,
                            Country = "US",
                            StateOrProvince = "WI"
                        },
                        new
                        {
                            Id = 51L,
                            Country = "US",
                            StateOrProvince = "WY"
                        },
                        new
                        {
                            Id = 52L,
                            Country = "CA",
                            StateOrProvince = "AB"
                        },
                        new
                        {
                            Id = 53L,
                            Country = "CA",
                            StateOrProvince = "BC"
                        },
                        new
                        {
                            Id = 54L,
                            Country = "CA",
                            StateOrProvince = "MB"
                        },
                        new
                        {
                            Id = 55L,
                            Country = "CA",
                            StateOrProvince = "NB"
                        },
                        new
                        {
                            Id = 56L,
                            Country = "CA",
                            StateOrProvince = "NL"
                        },
                        new
                        {
                            Id = 57L,
                            Country = "CA",
                            StateOrProvince = "NT"
                        },
                        new
                        {
                            Id = 58L,
                            Country = "CA",
                            StateOrProvince = "NS"
                        },
                        new
                        {
                            Id = 59L,
                            Country = "CA",
                            StateOrProvince = "NU"
                        },
                        new
                        {
                            Id = 60L,
                            Country = "CA",
                            StateOrProvince = "ON"
                        },
                        new
                        {
                            Id = 61L,
                            Country = "CA",
                            StateOrProvince = "PE"
                        },
                        new
                        {
                            Id = 62L,
                            Country = "CA",
                            StateOrProvince = "QC"
                        },
                        new
                        {
                            Id = 63L,
                            Country = "CA",
                            StateOrProvince = "SK"
                        },
                        new
                        {
                            Id = 64L,
                            Country = "CA",
                            StateOrProvince = "YT"
                        });
                });

            modelBuilder.Entity("TheGame.Domain.DomainModels.PlayerIdentities.PlayerIdentity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ProviderIdentityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("RefreshTokenExpiration")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("ProviderName", "ProviderIdentityId")
                        .IsUnique();

                    b.ToTable("PlayerIdentities", (string)null);
                });

            modelBuilder.Entity("TheGame.Domain.DomainModels.Players.Player", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PlayerIdentityId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PlayerIdentityId")
                        .IsUnique()
                        .HasFilter("[PlayerIdentityId] IS NOT NULL");

                    b.ToTable("Players", (string)null);
                });

            modelBuilder.Entity("GameLicensePlates", b =>
                {
                    b.HasOne("TheGame.Domain.DomainModels.Games.Game", "Game")
                        .WithMany("GameLicensePlates")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheGame.Domain.DomainModels.LicensePlates.LicensePlate", "LicensePlate")
                        .WithMany()
                        .HasForeignKey("LicensePlateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheGame.Domain.DomainModels.Players.Player", "SpottedBy")
                        .WithMany()
                        .HasForeignKey("SpottedByPlayerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("LicensePlate");

                    b.Navigation("SpottedBy");
                });

            modelBuilder.Entity("TheGame.Domain.DomainModels.Games.Game", b =>
                {
                    b.HasOne("TheGame.Domain.DomainModels.Players.Player", "CreatedBy")
                        .WithMany("OwnedGames")
                        .HasForeignKey("CreatedByPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("TheGame.Domain.DomainModels.Games.GamePlayer", b =>
                {
                    b.HasOne("TheGame.Domain.DomainModels.Games.Game", "Game")
                        .WithMany("GamePlayerInvites")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TheGame.Domain.DomainModels.Players.Player", "Player")
                        .WithMany("InvatedGamePlayers")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("TheGame.Domain.DomainModels.Players.Player", b =>
                {
                    b.HasOne("TheGame.Domain.DomainModels.PlayerIdentities.PlayerIdentity", "PlayerIdentity")
                        .WithOne("Player")
                        .HasForeignKey("TheGame.Domain.DomainModels.Players.Player", "PlayerIdentityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("PlayerIdentity");
                });

            modelBuilder.Entity("TheGame.Domain.DomainModels.Games.Game", b =>
                {
                    b.Navigation("GameLicensePlates");

                    b.Navigation("GamePlayerInvites");
                });

            modelBuilder.Entity("TheGame.Domain.DomainModels.PlayerIdentities.PlayerIdentity", b =>
                {
                    b.Navigation("Player")
                        .IsRequired();
                });

            modelBuilder.Entity("TheGame.Domain.DomainModels.Players.Player", b =>
                {
                    b.Navigation("InvatedGamePlayers");

                    b.Navigation("OwnedGames");
                });
#pragma warning restore 612, 618
        }
    }
}
